# -*- coding: utf-8 -*-
"""Resume Bullet Point Generator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UbC5IufJFpDIfXCHpnZzqTBGd7axbABg
"""

!pip install --upgrade openai

!pip install streamlit python-dotenv openai==1.12.0 > /dev/null

app_code = """
import streamlit as st
import requests

# Azure details
AZURE_ENDPOINT = "https://openai-mochi.openai.azure.com/"
AZURE_KEY = "YOUR_KEY_HERE"
DEPLOYMENT = "gpt-35-turbo"
API_VERSION = "2024-02-01"

headers = {
    "Content-Type": "application/json",
    "api-key": AZURE_KEY
}

def generate_resume(name, job_title, skills):
    prompt = f\"\"\"
You are a resume writer. Create:
1️⃣ A short professional summary for: {name if name else 'the candidate'} applying for a {job_title}.
2️⃣ Then provide 5-6 resume bullet points focused on achievements.

Include these skills: {skills}
Write in a strong, confident tone using action verbs and quantifiable results when possible.
Do not include labels like "Summary:" — just give the text cleanly.
\"\"\"

    body = {
        "messages": [{"role": "user", "content": prompt}],
        "temperature": 0.35
    }

    url = f"{AZURE_ENDPOINT}openai/deployments/{DEPLOYMENT}/chat/completions?api-version={API_VERSION}"
    response = requests.post(url, headers=headers, json=body)
    return response.json()["choices"][0]["message"]["content"]


st.set_page_config(page_title="Resume Builder", page_icon="💼")
st.title("💼 AI Resume Builder")

with st.form("resume_form"):
    name = st.text_input("Your Name (optional)")
    job_title = st.text_input("Job Title You're Applying For")
    skills = st.text_area("Your Key Skills (comma separated)")
    submitted = st.form_submit_button("Generate Resume ✅")

if submitted:
    if not job_title or not skills:
        st.error("Please enter both the job title and your key skills.")
    else:
        with st.spinner("Creating your resume content..."):
            output = generate_resume(name, job_title, skills)

        st.subheader("📌 Generated Resume Content")
        st.write(output)
"""

with open("resume_app.py", "w") as f:
    f.write(app_code)

!pkill -f streamlit || true
!fuser -k 8501/tcp || true
!streamlit run resume_app.py --server.port=8501 --server.headless true &>/dev/null&

import subprocess, time, re
!wget -q -O cloudflared https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
!chmod +x cloudflared

p = subprocess.Popen(
    ["./cloudflared", "tunnel", "--url", "http://localhost:8501", "--no-autoupdate"],
    stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True
)

url = None
for _ in range(200):
    line = p.stdout.readline()
    if "trycloudflare.com" in line:
        match = re.search(r"https://[^\s]+", line)
        if match:
            url = match.group(0)
            break

print("Resume App URL:", url if url else "Starting... wait 10s")

